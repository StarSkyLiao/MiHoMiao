//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/C#Library/MiHoMiao/MiHoMiao.Migxn/Antlr/Grammar/MigxnExpr.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


namespace MiHoMiao.Migxn.Antlr.Auto;

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MigxnExpr"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMigxnExprVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryExpr([NotNull] MigxnExpr.BinaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AndOrExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndOrExpr([NotNull] MigxnExpr.AndOrExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParamListExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamListExpr([NotNull] MigxnExpr.ParamListExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesesExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesesExpr([NotNull] MigxnExpr.ParenthesesExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SingleExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleExpr([NotNull] MigxnExpr.SingleExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MigxnExpr.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamList([NotNull] MigxnExpr.ParamListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DecIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecIntLiteral([NotNull] MigxnExpr.DecIntLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>HexIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHexIntLiteral([NotNull] MigxnExpr.HexIntLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinIntLiteral([NotNull] MigxnExpr.BinIntLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CharLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharLiteral([NotNull] MigxnExpr.CharLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FloatLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatLiteral([NotNull] MigxnExpr.FloatLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExponentLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExponentLiteral([NotNull] MigxnExpr.ExponentLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NormalStringLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNormalStringLiteral([NotNull] MigxnExpr.NormalStringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VerbatimStringLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVerbatimStringLiteral([NotNull] MigxnExpr.VerbatimStringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MigxnExpr.namespace_or_typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespace_or_typeName([NotNull] MigxnExpr.Namespace_or_typeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MigxnExpr.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_argument_list([NotNull] MigxnExpr.Type_argument_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MigxnExpr.fullType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFullType([NotNull] MigxnExpr.FullTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NamedType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamedType([NotNull] MigxnExpr.NamedTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TupleType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleType([NotNull] MigxnExpr.TupleTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>KeywordType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeywordType([NotNull] MigxnExpr.KeywordTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MigxnExpr.tupleElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleElement([NotNull] MigxnExpr.TupleElementContext context);
}
