//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/C#Library/MiHoMiao/MiHoMiao.Migxn/Antlr/Grammar/MigxnExpr.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


namespace MiHoMiao.Migxn.Antlr.Auto;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MigxnExpr"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMigxnExprListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>BinaryExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryExpr([NotNull] MigxnExpr.BinaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BinaryExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryExpr([NotNull] MigxnExpr.BinaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AndOrExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndOrExpr([NotNull] MigxnExpr.AndOrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AndOrExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndOrExpr([NotNull] MigxnExpr.AndOrExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParamListExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamListExpr([NotNull] MigxnExpr.ParamListExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParamListExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamListExpr([NotNull] MigxnExpr.ParamListExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesesExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesesExpr([NotNull] MigxnExpr.ParenthesesExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesesExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesesExpr([NotNull] MigxnExpr.ParenthesesExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SingleExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleExpr([NotNull] MigxnExpr.SingleExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SingleExpr</c>
	/// labeled alternative in <see cref="MigxnExpr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleExpr([NotNull] MigxnExpr.SingleExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MigxnExpr.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] MigxnExpr.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MigxnExpr.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] MigxnExpr.ParamListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DecIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecIntLiteral([NotNull] MigxnExpr.DecIntLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DecIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecIntLiteral([NotNull] MigxnExpr.DecIntLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>HexIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHexIntLiteral([NotNull] MigxnExpr.HexIntLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>HexIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHexIntLiteral([NotNull] MigxnExpr.HexIntLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BinIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinIntLiteral([NotNull] MigxnExpr.BinIntLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BinIntLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinIntLiteral([NotNull] MigxnExpr.BinIntLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CharLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharLiteral([NotNull] MigxnExpr.CharLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CharLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharLiteral([NotNull] MigxnExpr.CharLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FloatLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatLiteral([NotNull] MigxnExpr.FloatLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FloatLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatLiteral([NotNull] MigxnExpr.FloatLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExponentLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponentLiteral([NotNull] MigxnExpr.ExponentLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExponentLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponentLiteral([NotNull] MigxnExpr.ExponentLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NormalStringLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNormalStringLiteral([NotNull] MigxnExpr.NormalStringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NormalStringLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNormalStringLiteral([NotNull] MigxnExpr.NormalStringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VerbatimStringLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVerbatimStringLiteral([NotNull] MigxnExpr.VerbatimStringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VerbatimStringLiteral</c>
	/// labeled alternative in <see cref="MigxnExpr.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVerbatimStringLiteral([NotNull] MigxnExpr.VerbatimStringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MigxnExpr.namespace_or_typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace_or_typeName([NotNull] MigxnExpr.Namespace_or_typeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MigxnExpr.namespace_or_typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace_or_typeName([NotNull] MigxnExpr.Namespace_or_typeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MigxnExpr.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_argument_list([NotNull] MigxnExpr.Type_argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MigxnExpr.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_argument_list([NotNull] MigxnExpr.Type_argument_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MigxnExpr.fullType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFullType([NotNull] MigxnExpr.FullTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MigxnExpr.fullType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFullType([NotNull] MigxnExpr.FullTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NamedType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedType([NotNull] MigxnExpr.NamedTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NamedType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedType([NotNull] MigxnExpr.NamedTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TupleType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleType([NotNull] MigxnExpr.TupleTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TupleType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleType([NotNull] MigxnExpr.TupleTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>KeywordType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeywordType([NotNull] MigxnExpr.KeywordTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>KeywordType</c>
	/// labeled alternative in <see cref="MigxnExpr.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeywordType([NotNull] MigxnExpr.KeywordTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MigxnExpr.tupleElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleElement([NotNull] MigxnExpr.TupleElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MigxnExpr.tupleElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleElement([NotNull] MigxnExpr.TupleElementContext context);
}
