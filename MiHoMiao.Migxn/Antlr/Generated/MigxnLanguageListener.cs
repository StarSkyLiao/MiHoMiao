//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/C#Library/MiHoMiao/MiHoMiao.Migxn/Antlr/Definition/MigxnLanguage.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


namespace MiHoMiao.Migxn.Antlr.Generated;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MigxnLanguage"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMigxnLanguageListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MigxnLanguage.language"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLanguage([NotNull] MigxnLanguage.LanguageContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MigxnLanguage.language"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLanguage([NotNull] MigxnLanguage.LanguageContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MigxnLanguage.method"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod([NotNull] MigxnLanguage.MethodContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MigxnLanguage.method"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod([NotNull] MigxnLanguage.MethodContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BlockStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStmt([NotNull] MigxnLanguage.BlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BlockStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStmt([NotNull] MigxnLanguage.BlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarStmt([NotNull] MigxnLanguage.VarStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarStmt([NotNull] MigxnLanguage.VarStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValStmt([NotNull] MigxnLanguage.ValStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValStmt([NotNull] MigxnLanguage.ValStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] MigxnLanguage.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] MigxnLanguage.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IfElseStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfElseStmt([NotNull] MigxnLanguage.IfElseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfElseStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfElseStmt([NotNull] MigxnLanguage.IfElseStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] MigxnLanguage.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] MigxnLanguage.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LoopStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStmt([NotNull] MigxnLanguage.LoopStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LoopStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStmt([NotNull] MigxnLanguage.LoopStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] MigxnLanguage.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] MigxnLanguage.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] MigxnLanguage.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignStmt</c>
	/// labeled alternative in <see cref="MigxnLanguage.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] MigxnLanguage.AssignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BinaryExpr</c>
	/// labeled alternative in <see cref="MigxnLanguage.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryExpr([NotNull] MigxnLanguage.BinaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BinaryExpr</c>
	/// labeled alternative in <see cref="MigxnLanguage.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryExpr([NotNull] MigxnLanguage.BinaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AndOrExpr</c>
	/// labeled alternative in <see cref="MigxnLanguage.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndOrExpr([NotNull] MigxnLanguage.AndOrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AndOrExpr</c>
	/// labeled alternative in <see cref="MigxnLanguage.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndOrExpr([NotNull] MigxnLanguage.AndOrExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesesExpr</c>
	/// labeled alternative in <see cref="MigxnLanguage.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesesExpr([NotNull] MigxnLanguage.ParenthesesExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesesExpr</c>
	/// labeled alternative in <see cref="MigxnLanguage.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesesExpr([NotNull] MigxnLanguage.ParenthesesExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SingleExpr</c>
	/// labeled alternative in <see cref="MigxnLanguage.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleExpr([NotNull] MigxnLanguage.SingleExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SingleExpr</c>
	/// labeled alternative in <see cref="MigxnLanguage.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleExpr([NotNull] MigxnLanguage.SingleExprContext context);
}
