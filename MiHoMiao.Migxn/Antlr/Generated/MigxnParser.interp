token literal names:
null
null
null
null
'import'
'export'
'from'
'with'
'public'
'global'
'asmbly'
'family'
'intern'
'native'
'valtype'
'secured'
'virtual'
'concept'
'toolset'
'feature'
'var'
'val'
'let'
'fun'
'get'
'set'
'if'
'else'
'and'
'or'
'not'
'is'
'as'
'goto'
'label::'
'loop'
'while'
'pass'
'break'
'ret'
null
null
null
null
null
null
null
null
null
'{'
'}'
'['
']'
'('
')'
'.'
','
':'
';'
'+'
'-'
'*'
'/'
'%'
'&'
'|'
'^'
'!'
'~'
'='
'?'
'::'
'++'
'--'
'->'
'=='
'!='
'<='
'>='
'<'
'>'
'+='
'-='
'*='
'/='
'%='
'&='
'|='
'^='
'<<'
'>>'
'??='

token symbolic names:
null
SingleLintComment
MultiLineComment
WhiteSpace
Import
Export
From
With
Public
Global
Asmbly
Family
Intern
Native
ValType
Secured
Virtual
Concept
Toolset
Feature
Var
Val
Let
Fun
Get
Set
If
Else
And
Or
Not
Is
As
Goto
Label
Loop
While
Pass
Break
Return
Identifier
LITERAL_ACCESS
IntegerLiteral
HexIntegerLiteral
BinIntegerLiteral
RealNumberLiteal
CharLiteral
StringLiteral
VerbatimString
OpenBrace
CloseBrace
OpenBracket
CloseBracket
OpenParens
CloseParens
Dot
Comma
Colon
SemiColon
Add
Sub
Mul
Div
Rem
LogicAnd
LogicOr
LogicXor
Bang
Tilde
Assign
Interr
DoubleColon
Inc
Dec
Arrow
Ceq
Cneq
Cle
Cge
Clt
Cgt
AddAssign
SubAssign
MulAssign
DivAssign
RemAssign
AndAssign
OrAssign
XorAssign
Shl
Shr
NullAssign

rule names:
expression


atn:
[4, 1, 91, 5, 2, 0, 7, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 2, 0, 42, 42, 45, 48, 3, 0, 2, 1, 0, 0, 0, 2, 3, 7, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0]